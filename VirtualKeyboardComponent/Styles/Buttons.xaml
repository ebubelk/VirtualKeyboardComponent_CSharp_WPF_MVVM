<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!--#region PageButton-->
    <Style x:Key="PageButton"
           TargetType="RadioButton">
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="HorizontalAlignment"
                Value="Center" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="Margin"
                Value="0 5 0 0" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border x:Name="border"
                            Height="50"
                            Width="228"
                            BorderThickness="0">
                        <Border.Background>
                            <SolidColorBrush x:Name="BorderBackground"
                                             Color="#272B2F" />
                        </Border.Background>
                        <Grid>
                            <Border x:Name="Indicator"
                                    Height="35"
                                    Width="4"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Background="#FFFFFF"
                                    Visibility="Collapsed"
                                    CornerRadius="2" />
                            <ContentPresenter />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Visibility"
                                    TargetName="Indicator"
                                    Value="Visible" />
                        </Trigger>
                        <EventTrigger RoutedEvent="Border.MouseEnter"
                                      SourceName="border">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="BorderBackground"
                                                    Storyboard.TargetProperty="Color"
                                                    From="#272B2F"
                                                    To="#3E434A"
                                                    Duration="0:0:0.3" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Border.MouseLeave"
                                      SourceName="border">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="BorderBackground"
                                                    Storyboard.TargetProperty="Color"
                                                    From="#3E434A"
                                                    To="#272B2F"
                                                    Duration="0:0:0.3" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="#212529" />

                            <Setter Property="Visibility"
                                    TargetName="Indicator"
                                    Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion PageButton-->
    <!--#region ButtonSettings-->
    <SolidColorBrush x:Key="ButtonBackground"
                     Color="#276584" />
    <SolidColorBrush x:Key="ButtonHoverBackground"
                     Color="#20546D" />
    <SolidColorBrush x:Key="ButtonPressedBackground"
                     Color="#20546D" />
    <SolidColorBrush x:Key="ButtonBorder"
                     Color="Transparent" />
    <SolidColorBrush x:Key="ButtonTextForeground"
                     Color="#DBDBDB" />
    <SolidColorBrush x:Key="ButtonDisabledBackground"
                     Color="Gray" />
    <SolidColorBrush x:Key="ButtonDisabledForeground"
                     Color="DarkGray" />
    <SolidColorBrush x:Key="ButtonBorderColor"
                     Color="#537EA2" />
    <SolidColorBrush x:Key="RadioButtonCheckedColor"
                     Color="#1B465B" />
    <Thickness x:Key="ButtonThickness">0</Thickness>
    <CornerRadius x:Key="ButtonBorderRadius">8</CornerRadius>
    <CornerRadius x:Key="BigButtonBorderRadius">40</CornerRadius>
    <!--#endregion ButtonSettings-->
    <!--#region MainButton-->
    <Style x:Key="MainButton"
           TargetType="{x:Type Button}">
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="Background"
                Value="{StaticResource ButtonBackground}" />
        <Setter Property="Foreground"
                Value="{StaticResource ButtonTextForeground}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource ButtonBorder}" />
        <Setter Property="BorderThickness"
                Value="{StaticResource ButtonThickness}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{StaticResource ButtonBorderRadius}">
                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource ButtonHoverBackground}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource ButtonHoverBackground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource ButtonDisabledBackground}" />
                            <Setter Property="Foreground"
                                    Value="{StaticResource ButtonDisabledForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion MainButton-->
    <!--#region MainBigButton-->
    <Style x:Key="MainBigButton"
           TargetType="{x:Type Button}">
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="Background"
                Value="{StaticResource ButtonBackground}" />
        <Setter Property="Foreground"
                Value="{StaticResource ButtonTextForeground}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource ButtonBorder}" />
        <Setter Property="BorderThickness"
                Value="{StaticResource ButtonThickness}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{StaticResource BigButtonBorderRadius}">
                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource ButtonHoverBackground}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource ButtonHoverBackground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource ButtonDisabledBackground}" />
                            <Setter Property="Foreground"
                                    Value="{StaticResource ButtonDisabledForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion MainBigButton-->
    <!--#region CustomRadioButton -->
    <Style x:Key="CustomRadioButton"
           TargetType="RadioButton">
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="HorizontalAlignment"
                Value="Center" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border x:Name="border"
                            Height="50"
                            Width="220"
                            BorderThickness="0"
                            CornerRadius="6"
                            Background="{StaticResource ButtonBackground}"
                            BorderBrush="{StaticResource ButtonBackground}">
                        <Grid>
                            <ContentPresenter />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource ButtonHoverBackground}" />
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource ButtonHoverBackground}" />
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource ButtonBorderColor}" />
                            <Setter Property="BorderThickness"
                                    TargetName="border"
                                    Value="4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion CustomRadioButton-->
    <!--#region CustomRadioButtonEffect -->
    <Style x:Key="CustomRadioButtonEffect"
           TargetType="RadioButton">
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="HorizontalAlignment"
                Value="Center" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border x:Name="border"
                            Height="50"
                            Width="220"
                            BorderThickness="0"
                            CornerRadius="6"
                            Background="{StaticResource ButtonBackground}"
                            BorderBrush="{StaticResource ButtonBackground}">
                        <Grid>
                            <ContentPresenter />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!-- Mouse Over Trigger -->
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource ButtonHoverBackground}" />
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource ButtonHoverBackground}" />
                        </Trigger>
                        <!-- IsChecked Trigger -->
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource RadioButtonCheckedColor}" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="border"
                                                         Storyboard.TargetProperty="Width"
                                                         To="240"
                                                         Duration="0:0:0.2" />
                                        <DoubleAnimation Storyboard.TargetName="border"
                                                         Storyboard.TargetProperty="Height"
                                                         To="60"
                                                         Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="border"
                                                         Storyboard.TargetProperty="Width"
                                                         To="220"
                                                         Duration="0:0:0.2" />
                                        <DoubleAnimation Storyboard.TargetName="border"
                                                         Storyboard.TargetProperty="Height"
                                                         To="50"
                                                         Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
    <!--#region EllipseButton -->
    <Style x:Key="EllipseButton"
           TargetType="{x:Type Button}">
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="Background"
                Value="{StaticResource ButtonBackground}" />
        <Setter Property="Foreground"
                Value="{StaticResource ButtonTextForeground}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource ButtonBorder}" />
        <Setter Property="BorderThickness"
                Value="{StaticResource ButtonThickness}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Ellipse x:Name="ellipse"
                                 Fill="{TemplateBinding Background}"
                                 Stroke="{TemplateBinding BorderBrush}"
                                 StrokeThickness="{TemplateBinding BorderThickness}" />
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Fill"
                                    TargetName="ellipse"
                                    Value="{StaticResource ButtonHoverBackground}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter Property="Fill"
                                    TargetName="ellipse"
                                    Value="{StaticResource ButtonHoverBackground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Fill"
                                    TargetName="ellipse"
                                    Value="{StaticResource ButtonDisabledBackground}" />
                            <Setter Property="Foreground"
                                    Value="{StaticResource ButtonDisabledForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
    <!--#region EllipseButtonEffect -->
    <Style x:Key="EllipseButtonEffect"
           TargetType="{x:Type Button}">
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="Background"
                Value="{StaticResource ButtonBackground}" />
        <Setter Property="Foreground"
                Value="{StaticResource ButtonTextForeground}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource ButtonBorder}" />
        <Setter Property="BorderThickness"
                Value="{StaticResource ButtonThickness}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid RenderTransformOrigin="0.5,0.5">
                        <Grid.RenderTransform>
                            <ScaleTransform x:Name="scaleTransform"
                                            ScaleX="1"
                                            ScaleY="1" />
                        </Grid.RenderTransform>
                        <Ellipse x:Name="ellipse"
                                 Fill="{TemplateBinding Background}"
                                 Stroke="{TemplateBinding BorderBrush}"
                                 StrokeThickness="{TemplateBinding BorderThickness}" />
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- Hover State -->
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="scaleTransform"
                                                         Storyboard.TargetProperty="ScaleX"
                                                         To="1.1"
                                                         Duration="0:0:0.2" />
                                        <DoubleAnimation Storyboard.TargetName="scaleTransform"
                                                         Storyboard.TargetProperty="ScaleY"
                                                         To="1.1"
                                                         Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="scaleTransform"
                                                         Storyboard.TargetProperty="ScaleX"
                                                         To="1"
                                                         Duration="0:0:0.2" />
                                        <DoubleAnimation Storyboard.TargetName="scaleTransform"
                                                         Storyboard.TargetProperty="ScaleY"
                                                         To="1"
                                                         Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <!-- Pressed State -->
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="scaleTransform"
                                                         Storyboard.TargetProperty="ScaleX"
                                                         To="1.2"
                                                         Duration="0:0:0.2" />
                                        <DoubleAnimation Storyboard.TargetName="scaleTransform"
                                                         Storyboard.TargetProperty="ScaleY"
                                                         To="1.2"
                                                         Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="scaleTransform"
                                                         Storyboard.TargetProperty="ScaleX"
                                                         To="1.1"
                                                         Duration="0:0:0.2" />
                                        <DoubleAnimation Storyboard.TargetName="scaleTransform"
                                                         Storyboard.TargetProperty="ScaleY"
                                                         To="1.1"
                                                         Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <!-- Disabled State -->
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Fill"
                                    TargetName="ellipse"
                                    Value="{StaticResource ButtonDisabledBackground}" />
                            <Setter Property="Foreground"
                                    Value="{StaticResource ButtonDisabledForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
    <!--#region KeyboardButton-->
    
    <!-- Renk ve ölçü kaynakları -->
    <SolidColorBrush x:Key="KeyboardButtonBackground"
                     Color="#3C3C3C" />
    <SolidColorBrush x:Key="KeyboardButtonHoverBackground"
                     Color="#323232" />
    <SolidColorBrush x:Key="KeyboardButtonPressedBackground"
                     Color="#323232" />
    <SolidColorBrush x:Key="KeyboardButtonBorder"
                     Color="#3C3C3C" />
    <SolidColorBrush x:Key="KeyboardButtonTextForeground"
                     Color="#DBDBDB" />
    <SolidColorBrush x:Key="KeyboardButtonDisabledBackground"
                     Color="Gray" />
    <SolidColorBrush x:Key="KeyboardButtonDisabledForeground"
                     Color="DarkGray" />
    <SolidColorBrush x:Key="KeyboardButtonBorderColor"
                     Color="#3C3C3C" />

    <Thickness x:Key="KeyboardButtonThickness">0</Thickness>
    <CornerRadius x:Key="KeyboardButtonBorderRadius">2</CornerRadius>

    <Style x:Key="KeyboardButton"
           TargetType="{x:Type Button}">
        <!-- Varsayılan ayarlar -->
        <Setter Property="FontSize"
                Value="18" />
        <Setter Property="Focusable"
                Value="False" />
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="Background"
                Value="{StaticResource KeyboardButtonBackground}" />
        <Setter Property="Foreground"
                Value="{StaticResource KeyboardButtonTextForeground}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource KeyboardButtonBorder}" />
        <Setter Property="BorderThickness"
                Value="{StaticResource KeyboardButtonThickness}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            Margin="1"
                            SnapsToDevicePixels="True"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{StaticResource KeyboardButtonBorderRadius}">
                        <!-- Buton normal durumdayken DropShadowEffect ile gölge efekti -->
                        <Border.Effect>
                            <DropShadowEffect Color="Black"
                                              Opacity="0.5"
                                              ShadowDepth="0"
                                              BlurRadius="5" />
                        </Border.Effect>
                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <!-- Fare üzerine gelince arka plan rengini değiştir -->
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="border"
                                    Property="Background"
                                    Value="{StaticResource KeyboardButtonHoverBackground}" />
                        </Trigger>
                        <!-- Butona basıldığında arka planı değiştir ve gölgeyi kaldır -->
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="border"
                                    Property="Background"
                                    Value="{StaticResource KeyboardButtonHoverBackground}" />
                            <Setter TargetName="border"
                                    Property="Effect"
                                    Value="{x:Null}" />
                        </Trigger>
                        <!-- Buton devre dışı bırakıldığında görünümü ayarla -->
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter TargetName="border"
                                    Property="Background"
                                    Value="{StaticResource KeyboardButtonDisabledBackground}" />
                            <Setter Property="Foreground"
                                    Value="{StaticResource KeyboardButtonDisabledForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
    <!--#region KeyboardButton-->
    <Style x:Key="CloseKeyboardButton"
           TargetType="{x:Type Button}">
        <!-- Varsayılan ayarlar -->
        <Setter Property="Focusable"
                Value="False" />
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            Margin="1"
                            SnapsToDevicePixels="True"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <!-- Buton normal durumdayken DropShadowEffect ile gölge efekti -->
                        <Border.Effect>
                            <DropShadowEffect Color="Black"
                                              Opacity="0.5"
                                              ShadowDepth="0"
                                              BlurRadius="5" />
                        </Border.Effect>
                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="border"
                                    Property="Effect"
                                    Value="{x:Null}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

</ResourceDictionary>